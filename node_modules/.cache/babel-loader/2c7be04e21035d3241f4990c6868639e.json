{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Kush\\\\defi-dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Kush\\\\defi-dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Kush\\\\defi-dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Kush\\\\defi-dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Kush\\\\defi-dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Kush\\\\defi-dapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kush\\\\defi-dapp\\\\src\\\\components\\\\Airdrop.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\n\nvar Airdrop = /*#__PURE__*/function (_Component) {\n  _inherits(Airdrop, _Component);\n\n  // Airdrop to have timer that counts down\n  // initialize countdown after our customer has staked >= 50 tokens\n  function Airdrop(props) {\n    var _this;\n\n    _classCallCheck(this, Airdrop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Airdrop).call(this, props));\n    _this.state = {\n      time: {},\n      seconds: 20\n    };\n    _this.timer = 0;\n    _this.stateTime = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Airdrop, [{\n    key: \"countDown\",\n    value: function countDown() {\n      // count down 1s at a time\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      }); // stop counting when we hit 0\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer == 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours, minutes, seconds;\n      hours = Math.floor(secs / (60 * 60));\n      var devisor_for_minutes = secs % (60 * 60);\n      minutes = Math.floor(devisor_for_minutes / 60);\n      var devisor_for_seconds = devisor_for_minutes % 60;\n      seconds = Math.ceil(devisor_for_seconds);\n      var obj = {\n        'h': hours,\n        'm': minutes,\n        's': seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var remainingTime = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: remainingTime\n      });\n      this.airdropRewardTokens();\n    }\n  }, {\n    key: \"airdropRewardTokens\",\n    value: function airdropRewardTokens() {\n      var stakingB = this.props.stakingBalance;\n\n      if (stakingB >= Web3.utils.fromWei('50000000000000000000', 'ether')) {\n        this.startTimer();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, this.state.time.m, \":\", this.state.time.s);\n    }\n  }]);\n\n  return Airdrop;\n}(Component);\n\nexport default Airdrop;","map":{"version":3,"sources":["C:/Users/Kush/defi-dapp/src/components/Airdrop.js"],"names":["React","Component","Web3","Airdrop","props","state","time","seconds","timer","stateTime","startTimer","bind","countDown","setState","secondsToTime","clearInterval","setInterval","secs","hours","minutes","Math","floor","devisor_for_minutes","devisor_for_seconds","ceil","obj","remainingTime","airdropRewardTokens","stakingB","stakingBalance","utils","fromWei","color","m","s"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,O;;;AACF;AACA;AAEA,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIA,UAAKC,KAAL,GAAa,CAAb;AACA,UAAKC,SAAL,GAAiB,MAAKC,UAAL,CAAgBC,IAAhB,uDAAjB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AARe;AASlB;;;;gCAEW;AACR;AACA,UAAIJ,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,GAAqB,CAAnC;AACA,WAAKM,QAAL,CAAc;AACVP,QAAAA,IAAI,EAAE,KAAKQ,aAAL,CAAmBP,OAAnB,CADI;AAEVA,QAAAA,OAAO,EAAEA;AAFC,OAAd,EAHQ,CAQR;;AACA,UAAIA,OAAO,IAAI,CAAf,EAAkB;AACdQ,QAAAA,aAAa,CAAC,KAAKP,KAAN,CAAb;AACH;AACJ;;;iCAEY;AACT,UAAI,KAAKA,KAAL,IAAc,CAAd,IAAmB,KAAKH,KAAL,CAAWE,OAAX,GAAqB,CAA5C,EAA+C;AAC3C,aAAKC,KAAL,GAAaQ,WAAW,CAAC,KAAKJ,SAAN,EAAiB,IAAjB,CAAxB;AACH;AACJ;;;kCAEaK,I,EAAM;AAChB,UAAIC,KAAJ,EAAWC,OAAX,EAAoBZ,OAApB;AACAW,MAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWJ,IAAI,IAAI,KAAK,EAAT,CAAf,CAAR;AAEA,UAAIK,mBAAmB,GAAGL,IAAI,IAAI,KAAK,EAAT,CAA9B;AACAE,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAV;AAEA,UAAIC,mBAAmB,GAAGD,mBAAmB,GAAG,EAAhD;AACAf,MAAAA,OAAO,GAAGa,IAAI,CAACI,IAAL,CAAUD,mBAAV,CAAV;AAEA,UAAIE,GAAG,GAAG;AACN,aAAMP,KADA;AAEN,aAAMC,OAFA;AAGN,aAAKZ;AAHC,OAAV;AAMA,aAAOkB,GAAP;AACH;;;wCAEmB;AAChB,UAAIC,aAAa,GAAG,KAAKZ,aAAL,CAAmB,KAAKT,KAAL,CAAWE,OAA9B,CAApB;AACA,WAAKM,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAEoB;AAAP,OAAd;AACA,WAAKC,mBAAL;AAEH;;;0CAEqB;AAClB,UAAIC,QAAQ,GAAG,KAAKxB,KAAL,CAAWyB,cAA1B;;AACA,UAAID,QAAQ,IAAI1B,IAAI,CAAC4B,KAAL,CAAWC,OAAX,CAAmB,sBAAnB,EAA2C,OAA3C,CAAhB,EAAqE;AACjE,aAAKrB,UAAL;AACH;AACJ;;;6BAGS;AACN,0BACI;AAAK,QAAA,KAAK,EAAE;AAACsB,UAAAA,KAAK,EAAE;AAAR,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK3B,KAAL,CAAWC,IAAX,CAAgB2B,CADrB,OACyB,KAAK5B,KAAL,CAAWC,IAAX,CAAgB4B,CADzC,CADJ;AAKH;;;;EA3EiBjC,S;;AA+EtB,eAAeE,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Web3 from 'web3';\r\n\r\nclass Airdrop extends Component {\r\n    // Airdrop to have timer that counts down\r\n    // initialize countdown after our customer has staked >= 50 tokens\r\n      \r\n    constructor(props) {\r\n        super(props) \r\n        this.state = {\r\n            time: {},\r\n            seconds: 20,\r\n        };\r\n        this.timer = 0;\r\n        this.stateTime = this.startTimer.bind(this);\r\n        this.countDown = this.countDown.bind(this);\r\n    }\r\n\r\n    countDown() {\r\n        // count down 1s at a time\r\n        let seconds = this.state.seconds - 1;\r\n        this.setState({\r\n            time: this.secondsToTime(seconds),\r\n            seconds: seconds\r\n        })\r\n\r\n        // stop counting when we hit 0\r\n        if (seconds == 0) {\r\n            clearInterval(this.timer)\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timer == 0 && this.state.seconds > 0) {\r\n            this.timer = setInterval(this.countDown, 1000)\r\n        }\r\n    }\r\n\r\n    secondsToTime(secs) {\r\n        let hours, minutes, seconds;\r\n        hours = Math.floor(secs / (60 * 60))\r\n\r\n        let devisor_for_minutes = secs % (60 * 60)\r\n        minutes = Math.floor(devisor_for_minutes / 60)\r\n\r\n        let devisor_for_seconds = devisor_for_minutes % 60\r\n        seconds = Math.ceil(devisor_for_seconds)\r\n\r\n        let obj = {\r\n            'h' : hours,\r\n            'm' : minutes,\r\n            's': seconds\r\n        }\r\n\r\n        return obj\r\n    }\r\n\r\n    componentDidMount() {\r\n        let remainingTime = this.secondsToTime(this.state.seconds)\r\n        this.setState({time: remainingTime})\r\n        this.airdropRewardTokens();\r\n        \r\n    }\r\n\r\n    airdropRewardTokens() {\r\n        let stakingB = this.props.stakingBalance\r\n        if (stakingB >= Web3.utils.fromWei('50000000000000000000', 'ether')) {\r\n            this.startTimer();\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div style={{color: 'black'}}>\r\n                {this.state.time.m}:{this.state.time.s}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Airdrop"]},"metadata":{},"sourceType":"module"}